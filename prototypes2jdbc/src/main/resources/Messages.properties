# *******************************************************************************
# Portions created by Sebastian Thomschke are copyright (c) 2005-2010 Sebastian
# Thomschke.
#
# All Rights Reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     Sebastian Thomschke - initial translation
# ******************************************************************************

# {context} = the validation context (e.g. a field, a method return value or a constructor/method parameter
# {invalidValue} = the value that has been checked

net.sf.oval.constraint.Assert.violated={context}:[{invalidValue}] does not satisfy condition: {expression}
net.sf.oval.constraint.AssertFalse.violated={context}:[{invalidValue}] is not false
net.sf.oval.constraint.AssertNull.violated={context}:[{invalidValue}] must be null
net.sf.oval.constraint.AssertTrue.violated={context}:[{invalidValue}] is not true
net.sf.oval.constraint.AssertURL.violated={context}:[{invalidValue}] is not a valid URL
net.sf.oval.constraint.AssertValid.violated={context}:[{invalidValue}] is invalid
net.sf.oval.constraint.CheckWith.violated={context}:[{invalidValue}] {simpleCheck} not satisfied
net.sf.oval.constraint.DateRange.violated={context}:[{invalidValue}] is not in the range {min} through {max}
net.sf.oval.constraint.Email.violated={context}:[{invalidValue}] is not a valid e-mail address
net.sf.oval.constraint.EqualToField.violated={context}:[{invalidValue}] is not equal to field {fieldName}
net.sf.oval.constraint.Future.violated={context}:[{invalidValue}] must be in the future
net.sf.oval.constraint.HasSubstring.violated={context}:[{invalidValue}] must contain the substring '{substring}'
net.sf.oval.constraint.InstanceOf.violated={context}:[{invalidValue}] must be an instance of {types}
net.sf.oval.constraint.InstanceOfAny.violated={context}:[{invalidValue}] must be an instance of {types}
net.sf.oval.constraint.Length.violated={context}:[{invalidValue}] is not between {min} and {max} characters long
net.sf.oval.constraint.MatchPattern.violated={context}:[{invalidValue}] does not match the pattern {pattern}
net.sf.oval.constraint.Max.violated={context}:[{invalidValue}] cannot be greater than {max}
net.sf.oval.constraint.MaxLength.violated={context}:[{invalidValue}] cannot be longer than {max} characters
net.sf.oval.constraint.MaxSize.violated={context}:[{invalidValue}] cannot have more than {max} elements
net.sf.oval.constraint.MemberOf.violated={context}:[{invalidValue}] must be one of these values: {members}
net.sf.oval.constraint.Min.violated={context}:[{invalidValue}] cannot be smaller than {min}
net.sf.oval.constraint.MinLength.violated={context}:[{invalidValue}] cannot be shorter than {min} characters
net.sf.oval.constraint.MinSize.violated={context}:[{invalidValue}] cannot have less than {min} elements
net.sf.oval.constraint.NoSelfReference.violated={context}:[{invalidValue}] illegal self reference
net.sf.oval.constraint.NotBlank.violated={context}:[{invalidValue}] cannot be blank
net.sf.oval.constraint.NotEmpty.violated={context}:[{invalidValue}] cannot be empty
net.sf.oval.constraint.NotEqual.violated={context}:[{invalidValue}] must not equal {testString}
net.sf.oval.constraint.NotEqualToField.violated={context}:[{invalidValue}] must not equal to field {fieldName}
net.sf.oval.constraint.NotMatchPattern.violated={context}:[{invalidValue}] must not match the pattern {pattern}
net.sf.oval.constraint.NotMemberOf.violated={context}:[{invalidValue}] must not be one of these values: {members}
net.sf.oval.constraint.NotNegative.violated={context}:[{invalidValue}] cannot be negative
net.sf.oval.constraint.NotNull.violated={context}:[{invalidValue}] cannot be null
net.sf.oval.constraint.Past.violated={context}:[{invalidValue}] must be in the past
net.sf.oval.constraint.Range.violated={context}:[{invalidValue}] is not in the range {min} through {max}
net.sf.oval.constraint.Size.violated={context}:[{invalidValue}] does not have between {min} and {max} elements
net.sf.oval.constraint.ValidateWithMethod.violated={context}:[{invalidValue}] indicated to be invalid by method {methodName}({parameterType})

net.sf.oval.guard.Pre.violated={context}:[{invalidValue}] does not satisfy pre condition: {expression}
net.sf.oval.guard.Post.violated={context}:[{invalidValue}] does not satisfy post condition: {expression}

net.sf.oval.exception.AccessingFieldValueFailedException.message=Accessing value of field {fieldName} failed.
net.sf.oval.exception.ConstraintSetAlreadyDefinedException.message=Another constraint set with the same fully qualified id {constraintSetId} has already been defined.
net.sf.oval.exception.ExpressionLanguageNotAvailableException.message=Expression language {languageId} is not available.
net.sf.oval.exception.InvokingMethodFailedException.message=Invoking method {methodName} failed.
net.sf.oval.exception.ObjectGraphNavigatorNotAvailableException.message=Object graph navigator {id} is not available.
net.sf.oval.exception.UndefinedConstraintSetException.message=No constraint set with id {constraintSetId} defined.

net.sf.oval.context.ConstructorParameterContext.parameter=parameter
net.sf.oval.context.MethodParameterContext.parameter=parameter
